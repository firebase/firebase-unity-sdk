# Workflow to handle building the Unity SDK on android
name: Build Android Reuse

on:
  workflow_call:
    inputs:
      unity_version:
        description: 'Unity version'
        default: '2019'
        required: true
        type: string
      firebase_cpp_sdk_version:
        description: 'Firebase CPP SDK version to build against (The branch, tag or SHA to checkout)'
        default: ''
        required: false
        type: string
      unity_branch:
        description: 'Unity branch to build against, empty means current branch'
        default: ''
        type: string
      apis:
        description: 'CSV of apis to build and test'
        default: 'analytics,auth,crashlytics,database,dynamic_links,firestore,functions,installations,messaging,remote_config,storage'
        required: true
        type: string
      unity_platform_name:
        description: 'The platform name Unity should install with'
        default: ''
        required: true
        type: string
      # Additional CMake flags to use
      additional_cmake_flags:
        description: 'Additional flags to pass into CMake'
        default: ''
        required: false
        type: string

jobs:
  build_android:
    name: build-android-unity${{ inputs.unity_version }}-CPP${{ inputs.firebase_cpp_sdk_version }}
    runs-on: macos-latest
    strategy:
      fail-fast: false
    env:
      # LC_ALL, LANG and U3D_PASSWORD are needed for U3D.
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
      U3D_PASSWORD: ""
      # Disable checking for U3D updates, since it is buggy
      U3D_SKIP_UPDATE_CHECK: 1
      CCACHE_DIR: ${{ github.workspace }}/ccache_dir
  
    steps:
      - name: Checkout Unity Repo
        uses: actions/checkout@v2
        with:
          submodules: true
          ref: ${{ inputs.unity_branch }}
          
      - name: Checkout CPP Repo
        uses: actions/checkout@v2
        with:
          repository: firebase/firebase-cpp-sdk
          path: firebase-cpp-sdk
          ref: ${{ inputs.firebase_cpp_sdk_version }}
          submodules: true

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Install prerequisites
        shell: bash
        run: |
          echo "FIREBASE_CPP_SDK_DIR=${{ github.workspace }}/firebase-cpp-sdk" >> $GITHUB_ENV
          cd firebase-cpp-sdk
          python scripts/gha/install_prereqs_desktop.py
          build_scripts/android/install_prereqs.sh
          cd ..

      - name: Cache NDK
        id: cache_ndk
        uses: actions/cache@v2
        with:
          path: /tmp/android-ndk-r21e
          key: android-ndk-${{ matrix.os }}-r21e

      - name: Install Unity installer (U3D)
        shell: bash
        run: gem install u3d -v 1.2.3

      - name: Install python deps
        shell: bash
        run: |
          pip install -r scripts/gha/requirements.txt
      
      - name: Install Unity
        shell: bash
        run: |
          python scripts/gha/unity_installer.py --install --platforms ${{ inputs.unity_platform_name }} --version ${{ inputs.unity_version }}
      
      - name: Setup Unity path
        shell: bash
        run: |
          echo "UNITY_ROOT_DIR=$( python scripts/gha/print_matrix_configuration.py -u ${{ inputs.unity_version }} -k unity_path )" >> $GITHUB_ENV

      - name: Display Swig Version
        shell: bash
        run: |
          swig -version

      - name: Build SDK (Android)
        shell: bash
        run: |
          # TODO add handling cmake_extras
          python scripts/build_scripts/build_zips.py --platform=android --unity_root=$UNITY_ROOT_DIR --apis=${{ inputs.apis }}

      - name: Upload Build
        uses: actions/upload-artifact@v2
        with:
          name: android_unity
          path: android_unity/*.zip
