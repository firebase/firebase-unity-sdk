# Workflow to handle building the Unity SDK on linux
name: Build linux (SubWorkflow)

on:
  workflow_call:
    inputs:
      unity_version:
        description: 'Unity version'
        default: '2019'
        required: true
        type: string
      firebase_cpp_sdk_version:
        description: 'Firebase CPP SDK version to build against (The branch, tag or SHA to checkout)'
        default: ''
        required: false
        type: string
      unity_branch:
        description: 'Unity branch to build against, empty means current branch'
        default: ''
        type: string
      apis:
        description: 'CSV of apis to build and test'
        default: 'analytics,app_check,auth,crashlytics,database,dynamic_links,firestore,functions,installations,messaging,remote_config,storage'
        required: true
        type: string
      unity_platform_name:
        description: 'The platform name Unity should install with'
        default: ''
        required: true
        type: string
      # Additional CMake flags to use
      additional_cmake_flags:
        description: 'Additional flags to pass into CMake'
        default: ''
        required: false
        type: string

jobs:
  build_desktop:
    name: build-linux-unity${{inputs.unity_version}}-CPP${{ inputs.firebase_cpp_sdk_version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          ref: ${{ inputs.unity_branch }}
          fetch-depth: 0

      - uses: actions/checkout@v3
        with:
          repository: firebase/firebase-cpp-sdk
          path: firebase-cpp-sdk
          submodules: true
          ref: ${{ inputs.firebase_cpp_sdk_version }}
          fetch-depth: 0

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install prerequisites
        shell: bash
        run: |
          echo "FIREBASE_CPP_SDK_DIR=${{ github.workspace }}/firebase-cpp-sdk" >> $GITHUB_ENV
          cd firebase-cpp-sdk
          python scripts/gha/install_prereqs_desktop.py
          cd ..

      - name: Install python deps
        shell: bash
        run: |
          pip install -r scripts/gha/requirements.txt

      - name: Install OpenSSL (Linux)
        run: |
          sudo apt install openssl

      - id: unity_setup
        uses: ./gha/unity
        timeout-minutes: 30
        with:
          version: ${{ inputs.unity_version }}
          platforms: ${{ inputs.unity_platform_name }}

      - name: Setup Swig Env
        shell: bash
        run: |
          echo "$(swig -swiglib)" >> $GITHUB_PATH
          swig -swiglib
          echo "SWIG_DIR=$(swig -swiglib)" >> $GITHUB_ENV

      - name: Build SDK (Linux)
        timeout-minutes: 90
        shell: bash
        run: |
          # TODO add handling cmake_extras
          python scripts/build_scripts/build_zips.py --gha --platform=linux --use_boringssl=true --unity_root=$UNITY_ROOT_DIR --apis=${{ inputs.apis }} --gen_documentation_zip
      
      - name: Check zip files
        shell: bash
        run: |
          if [ -f linux_unity/*Linux.zip ]; then
            echo "linux_unity zip created."
          else
            echo "Fail to create linux_unity zip."
            exit 1
          fi
          if [ -f linux_unity/documentation_sources.zip ]; then
            echo "documentation_sources zip created."
          else
            echo "Fail to create documentation_sources zip."
            exit 1
          fi

      - name: Upload Build
        uses: actions/upload-artifact@v3
        with:
          name: linux_unity
          path: linux_unity/*Linux.zip

      - name: Upload Documentation Sources
        uses: actions/upload-artifact@v3
        with:
          name: documentation_sources
          path: linux_unity/documentation_sources.zip
