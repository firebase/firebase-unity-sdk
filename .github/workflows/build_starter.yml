# Workflow to handle triggering the build process
name: Firebase Unity SDK build

on:
  workflow_dispatch:
    inputs:
      unity_version:
        description: 'Unity version'
        default: '2019'
        required: true
      firebase_cpp_sdk_version:
        description: 'Firebase CPP SDK version to build against (The branch, tag or SHA to checkout)'
        default: ''
        required: false
      unity_branch:
        description: 'Unity branch to build against, empty means current branch'
        default: ''
      platforms:
        description: 'CSV of Android,iOS,Windows,macOS,Linux'
        default: 'Android,iOS,Windows,macOS,Linux'
        required: true
      apis:
        description: 'CSV of apis to build and test'
        default: 'analytics,auth,crashlytics,database,dynamic_links,firestore,functions,installations,messaging,remote_config,storage'
        required: true
      # Additional CMake flags to use
      additional_cmake_flags:
        description: 'Additional flags to pass into CMake'
        default: ''
        required: false

jobs:
  build android:
    name: build-android-unity${{ github.event.inputs.unity_version }}-CPP${{ github.event.inputs.firebase_cpp_sdk_version }}
    uses: firebase/firebase-unity-sdk/.github/workflows/build_android.yml@main
    with:
      unity_version: ${{ github.event.inputs.unity_branch }}
      firebase_cpp_sdk_version: ${{ github.event.inputs.firebase_cpp_sdk_version }}
      unity_branch: ${{ github.event.inputs.unity_branch }}
      apis: ${{ github.event.inputs.apis }}
      unity_platform_name: Android
      additional_cmake_flags: ${{ github.event.inputs.additional_cmake_flags }}
  
  build_ios:
    name: build-ios-unity${{ github.event.inputs.unity_version }}-CPP${{ github.event.inputs.firebase_cpp_sdk_version }}
    uses: firebase/firebase-unity-sdk/.github/workflows/build_ios.yml@main
    with:
      unity_version: ${{ github.event.inputs.unity_branch }}
      firebase_cpp_sdk_version: ${{ github.event.inputs.firebase_cpp_sdk_version }}
      unity_branch: ${{ github.event.inputs.unity_branch }}
      apis: ${{ github.event.inputs.apis }}
      unity_platform_name: iOS
      additional_cmake_flags: ${{ github.event.inputs.additional_cmake_flags }}

  build_linux:
    name: build-linux-unity${{ github.event.inputs.unity_version }}-CPP${{ github.event.inputs.firebase_cpp_sdk_version }}
    uses: firebase/firebase-unity-sdk/.github/workflows/build_linux.yml@main
    with:
      unity_version: ${{ github.event.inputs.unity_branch }}
      firebase_cpp_sdk_version: ${{ github.event.inputs.firebase_cpp_sdk_version }}
      unity_branch: ${{ github.event.inputs.unity_branch }}
      apis: ${{ github.event.inputs.apis }}
      unity_platform_name: Linux
      additional_cmake_flags: ${{ github.event.inputs.additional_cmake_flags }}

  build_macos:
    name: build-macos-unity${{ github.event.inputs.unity_version }}-CPP${{ github.event.inputs.firebase_cpp_sdk_version }}
    uses: firebase/firebase-unity-sdk/.github/workflows/build_macos.yml@main
    with:
      unity_version: ${{ github.event.inputs.unity_branch }}
      firebase_cpp_sdk_version: ${{ github.event.inputs.firebase_cpp_sdk_version }}
      unity_branch: ${{ github.event.inputs.unity_branch }}
      apis: ${{ github.event.inputs.apis }}
      unity_platform_name: macOS,iOS
      additional_cmake_flags: ${{ github.event.inputs.additional_cmake_flags }}

  build_windows:
    name: build-windows-unity${{ github.event.inputs.unity_version }}-CPP${{ github.event.inputs.firebase_cpp_sdk_version }}
    uses: firebase/firebase-unity-sdk/.github/workflows/build_windows.yml@main
    with:
      unity_version: ${{ github.event.inputs.unity_branch }}
      firebase_cpp_sdk_version: ${{ github.event.inputs.firebase_cpp_sdk_version }}
      unity_branch: ${{ github.event.inputs.unity_branch }}
      apis: ${{ github.event.inputs.apis }}
      unity_platform_name: Windows
      additional_cmake_flags: ${{ github.event.inputs.additional_cmake_flags }}
