/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Firebase.Firestore {

internal class SnapshotMetadataProxy : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal SnapshotMetadataProxy(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SnapshotMetadataProxy obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~SnapshotMetadataProxy() {
    Dispose();
  }

  public virtual void Dispose() {

    lock (FirebaseApp.disposeLock) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          FirestoreCppPINVOKE.delete_SnapshotMetadataProxy(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(
            null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public SnapshotMetadataProxy() : this(FirestoreCppPINVOKE.new_SnapshotMetadataProxy__SWIG_0(), true) {
    if (FirestoreCppPINVOKE.SWIGPendingException.Pending) throw FirestoreCppPINVOKE.SWIGPendingException.Retrieve();
  }

  public SnapshotMetadataProxy(bool hasPendingWrites, bool isFromCache) : this(FirestoreCppPINVOKE.new_SnapshotMetadataProxy__SWIG_1(hasPendingWrites, isFromCache), true) {
    if (FirestoreCppPINVOKE.SWIGPendingException.Pending) throw FirestoreCppPINVOKE.SWIGPendingException.Retrieve();
  }

  public SnapshotMetadataProxy(SnapshotMetadataProxy other) : this(FirestoreCppPINVOKE.new_SnapshotMetadataProxy__SWIG_2(SnapshotMetadataProxy.getCPtr(other)), true) {
    if (FirestoreCppPINVOKE.SWIGPendingException.Pending) throw FirestoreCppPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool has_pending_writes() {
    bool ret = FirestoreCppPINVOKE.SnapshotMetadataProxy_has_pending_writes(swigCPtr);
    if (FirestoreCppPINVOKE.SWIGPendingException.Pending) throw FirestoreCppPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool is_from_cache() {
    bool ret = FirestoreCppPINVOKE.SnapshotMetadataProxy_is_from_cache(swigCPtr);
    if (FirestoreCppPINVOKE.SWIGPendingException.Pending) throw FirestoreCppPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override string ToString() {
    string ret = FirestoreCppPINVOKE.SnapshotMetadataProxy_ToString(swigCPtr);
    if (FirestoreCppPINVOKE.SWIGPendingException.Pending) throw FirestoreCppPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}